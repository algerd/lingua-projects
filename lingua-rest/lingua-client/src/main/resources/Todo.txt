
Порядок формирования запросов.

Посмотреть как сессия сохраняется в клиентском спринг-буте:
    - сессия клиента и сессия сервера - разные элементы, но их надо как-то синхронизировать:
       напр. периодически отправлять запросы(напр. каждые 5 минут) на сервер для обнуления времени сессии,
       причём время жизни серверной сессии уменьшить(напр. до 20 минут).
       Или получать/обновлять/проверять сессии при каждом запросе, что очень накладно, потому что в rest приложении
       могут быть тысячи запросов в минуту для получения списков данных.
       Или делать синхронизацию сессий и исключения в случае непредвиденных прерываний сессии, при которых
       будут повторяться запросы для новой синхронизации сессий.


1. Сделать простой post-запрос с передачей логина и пароля.
    В ответе получить куку с id сесии и сохранить её.
    Проверять время жизни этой куки(обновлять её время после каждого запроса).

2. Hateoas Traverson запрос.
    Resource<Obj> resource = new Traverson(new URI(String...), MediaTypes.HAL_JSON)
        .follow("ref")
        .withHeaders(headers)
        .toObject(...) 
    
    или через разделение цепочки :
    
    Traverson traverson = new Traverson(uri, MediaTypes.HAL_JSON);       
    Traverson.TraversalBuilder builder = traverson
        .follow("users")
        .withHeaders(HttpHeaders headers)
        .toObject(...);  

    В обоих случаях главное место для аутентификации запроса - это сформировать заголовки в HttpHeaders headers
    и передать их через метод withHeaders(headers) билдеру Traverson.TraversalBuilder builder.
    В headers надо передавать id сесии, причём предварительно проверть время её жизни. И если время жизни сессии истекло,
    сделать запрос по п.1., получить новый id сессии и передать его в headers, в противном случае обнулить время
    жизни сессии и передать старый id сесии.

    Заголовок должен быть вида:

        Cookie:JSESSIONID=EF165DB9551CACC83E7EB6A8C0DDF4D4